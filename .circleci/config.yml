# fun-platform
# Docker containers CI
version: 2

# List fun-platform jobs that will be integrated and executed in a workflow
jobs:
  # Build job
  # Build the Docker images for production and development
  build:
    # We use the machine executor, i.e. a VM, not a container
    machine:
      # Cache docker layers so that we strongly speed up this job execution
      # This cache will be available to future jobs (although because jobs run
      # in parallel, CircleCI does not garantee that a given job will see a
      # specific version of the cache. See documentation for details)
      docker_layer_caching: true

    working_directory: ~/fun

    steps:
      # Checkout fun-platform sources
      - checkout

      # Restore the ~/fun/src cached repository. If the cache does not exists for
      # the current .Revision (commit hash), we fall back to the latest cache
      # with a label matching 'edx-repository-v1-'
      - restore_cache:
          keys:
            - edx-repository-v1-{{ .Revision }}
            - edx-repository-v1-

      # Clone Open edX sources
      - run:
          name: Clone Open edX platform
          command: |
            make clone

      # Production image build. It will be tagged as edxapp:latest
      - run:
          name: Build production image
          command: |
            make build

      # Development image build. It uses the Dockerfile_dev file and will
      # be tagged as edxapp:dev
      - run:
          name: Build development image
          command: |
            make build-dev

      # Cache Open edX repository (cloned in ~/fun/src) as the checkout is
      # rather time consuming for this project
      - save_cache:
          paths:
            - ~/fun/src/edx-platform/.git
          key: edx-repository-v1-{{ .Revision }}

      # Save and cache the built images to filesystem so that they will be
      # available to test and push them to DockerHub in subsequent jobs
      - run:
          name: Save docker images to filesystem
          command: |
            docker save -o edxapp.tar edxapp:latest edxapp:dev
      - save_cache:
          paths:
            - ~/fun/edxapp.tar
          key: edx-image-v1-{{ .Revision }}

  # Hub job
  # Load and tag production/development images to push them to Dockerhub
  # public registry
  # These images are now the latest for this branch so we will publish
  # both under their tag and under the `latest` tag so that our `latest`
  # images are always up-to-date
  hub:
    # We use the machine executor, i.e. a VM, not a container
    machine: true

    working_directory: ~/fun

    steps:
      # First, check that the BRANCH name is included in the TAG name. This is important
      # because we handle several important branches (master, funmooc, funwb, etc.) and
      # we must make sure that tag names are explicitly linked to a branch in order to
      # avoid conflicts
      - run:
          name: Check that the BRANCH name is included in the TAG name
          command: |
            if ! echo ${CIRCLE_TAG} | grep "${CIRCLE_BRANCH}" &> /dev/null; then
              # Stop the step without failing
              circleci step halt
            fi

      # Load the docker images from our cache to the docker engine and check that they
      # have been effectively loaded
      - restore_cache:
          keys:
            - edx-image-v1-{{ .Revision }}
      - run:
          name: Load images to docker engine
          command: |
            docker load < edxapp.tar
      - run:
          name: Check docker image tags
          command: |
            docker images edxapp:latest
            docker images edxapp:dev

      # Login to DockerHub with encrypted credentials stored as secret
      # environment variables (set in CircleCI project settings)
      - run:
          name: Login to DockerHub
          command: echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin

      # Tag images with our DockerHub namespace (fundocker/), and list
      # images to check that they have been properly tagged
      - run:
          name: Tag production image
          command: |
            docker tag edxapp:latest fundocker/edxapp:${CIRCLE_TAG}
            docker images fundocker/edxapp:${CIRCLE_TAG}

      # Publish the production image to DockerHub
      - run:
          name: Publish production image
          command: |
            docker push fundocker/edxapp:${CIRCLE_TAG}

# CI workflows
workflows:
  version: 2

  # We have a single workflow
  edxapp:
    jobs:
      # The build job has no required jobs, hence this will be our first job
      - build:
          # Filtering rule to run this job: none (we accept all tags; this job
          # will always run).
          filters:
            tags:
              only: /.*/

      # We are pushing to Docker only images that are the result of a tag respecting the pattern:
      #    **{branch-name}-x.y.z**
      #
      # Where branch-name is of the form: **{edx-version}[-{fork-name}]**
      #   - **edx-version:** name of the upstream `edx-platform` version (e.g. ginkgo.1),
      #   - **fork-name:** name of the specific project fork, if any (e.g. funwb).
      #
      # Some valid examples:
      #   - dogwood.3-1.0.3
      #   - dogwood.2-funmooc-17.6.1
      #   - eucalyptus-funwb-2.3.19
      - hub:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[a-z0-9.]*-?[a-z]*-(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
